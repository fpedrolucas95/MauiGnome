name: Build MAUI App (Windows and Android)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    strategy:
      matrix:
        configuration: [Release]

    runs-on: windows-latest

    env:
      PROJECT_FILE: mdi-maui/mdi-maui.csproj
      BUILD_CONFIGURATION: Release
      BUILD_VERSION: 1.0.4

    steps:
    # Checkout o código-fonte
    - name: Checkout
      uses: actions/checkout@v4

    # Instala o .NET SDK e o workload MAUI
    - name: Install .NET SDK and MAUI Workload
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - run: dotnet workload install maui

    # Gera um certificado autoassinado dinamicamente
    - name: Generate Self-Signed Certificate
      shell: powershell
      run: |
        $cert = New-SelfSignedCertificate -Type Custom `
          -Subject "CN=MAUIGnome" `
          -KeyUsage DigitalSignature `
          -FriendlyName "MauiGnomeCertificate" `
          -CertStoreLocation "Cert:\CurrentUser\My" `
          -KeyExportPolicy Exportable `
          -Provider "Microsoft Enhanced RSA and AES Cryptographic Provider" `
          -HashAlgorithm sha256 -KeyLength 2048

        $pwd = ConvertTo-SecureString -String "temporary_password" -Force -AsPlainText
        Export-PfxCertificate -Cert "Cert:\CurrentUser\My\$($cert.Thumbprint)" `
          -FilePath "SigningCertificate.pfx" -Password $pwd

    # Restaura dependências para Windows com RuntimeIdentifier
    - name: Restore Dependencies for Windows
      run: dotnet restore ${{ env.PROJECT_FILE }} --runtime win-x64

    # Build para Windows
    - name: Build Windows Project
      run: |
        dotnet publish ${{ env.PROJECT_FILE }} -c ${{ env.BUILD_CONFIGURATION }} `
          -f net8.0-windows10.0.19041.0 `
          -r win-x64 `
          -p:PackageCertificateKeyFile=SigningCertificate.pfx `
          -p:PackageCertificatePassword=temporary_password `
          --self-contained false `
          --output ./publish/windows

    # Restaura dependências para Android
    - name: Restore Dependencies for Android
      run: dotnet restore ${{ env.PROJECT_FILE }} --runtime android

    # Build para Android
    - name: Build Android Project
      run: |
        dotnet publish ${{ env.PROJECT_FILE }} -c ${{ env.BUILD_CONFIGURATION }} `
          -f net8.0-android `
          -p:AndroidPackageFormats=aab `
          --output ./publish/android

    # Upload de artefatos (Windows e Android)
    - name: Upload Windows Artifact
      uses: actions/upload-artifact@v3
      with:
        name: Windows Build
        path: ./publish/windows

    - name: Upload Android Artifact
      uses: actions/upload-artifact@v3
      with:
        name: Android Build
        path: ./publish/android
